using Microsoft.EntityFrameworkCore;
using QuickQuiz.Core.Model;
using QuickQuiz.Repository;

string[] boysName =
[
    "Ahmet",
    "Mehmet",
    "Mustafa",
    "Ali",
    "Hüseyin",
    "Yusuf",
    "İsmail",
    "Furkan",
    "Emre",
    "Can",
    "Ömer",
    "Burak",
    "Serkan",
    "Barış",
    "Taha",
    "Kadir",
    "Berk",
    "Kaan",
    "Onur",
    "Sinan",
    "Cem",
    "Murat",
    "Ege",
    "Cihan",
    "Kerem",
    "Mahir",
    "Salih",
    "Emir",
    "Arda",
    "Ahmet Emre",
    "Umut",
    "Mete",
    "Orhan",
    "Taylan",
    "Kaan",
    "Uğur",
    "Serhat",
    "Selim",
    "Alper",
    "Deniz",
    "Kaan",
    "İsmet",
    "Yusuf Can",
    "Emrah",
    "Mert",
    "Efe",
    "Ercan",
    "Samil",
    "Yunus",
    "İlkay",
    "Burhan",
    "Erdem",
    "Caner",
    "Hakan",
    "Gürkan",
    "Tolga",
    "Atalay",
    "Okan",
    "Baran",
    "Kaya",
    "Mertcan",
    "Canberk",
    "Onurcan",
    "Celal",
    "Enes",
    "Oktay",
    "Erkan",
    "Berkay",
    "Batuhan",
    "Osman",
    "Emirhan",
    "Yasin",
    "Alp",
    "Serdar",
    "Yavuz",
    "Onur",
    "Yunus Emre",
    "Doğan",
    "Emrah",
    "İsmet",
    "Alperen",
    "Serdar",
    "Ufuk",
    "Kaan",
    "Burakcan",
    "Yunus",
    "Eray",
    "Yiğit",
    "Barış",
    "Canberk",
    "Kerim",
    "Adnan",
    "Yunus Emre",
    "Talha",
    "Selçuk",
    "Alp",
    "Rüzgar",
    "Cemil",
    "Utku",
    "Aziz",
    "Ayhan",
    "Hüseyin",
    "Zeki",
    "Alper",
    "Çağlar",
    "Onur",
    "Şahin",
    "Kaan",
    "Doğukan",
    "Burak",
    "Koray",
    "Ferit",
    "Enis",
    "Kerem",
    "Eren",
    "Anıl",
    "Emrullah",
    "Sadullah",
    "Samet",
    "Alp",
    "Kuzey",
    "Melih",
    "Doğan",
    "Can",
    "Ege",
    "Metehan",
    "Atilla",
    "Emrah",
    "Hamza",
    "Halit",
    "Enver",
    "Mustafa",
    "Alp",
    "Yiğit",
    "Murat",
    "Cemal",
    "Ulaş",
    "Rüzgar",
    "Levent",
    "Batuhan",
    "Deniz",
    "Emirhan",
    "Serkan",
    "Baran",
    "Alp",
    "Hüseyin",
    "Cihan",
    "Serhat",
    "Burak",
    "Emre"
];

string[] girlsName =
[
    "Ayşe",
    "Fatma",
    "Zeynep",
    "Emine",
    "Hatice",
    "Elif",
    "Merve",
    "Esra",
    "İrem",
    "Büşra",
    "Yasemin",
    "Melek",
    "İpek",
    "Gülay",
    "Gizem",
    "Ceren",
    "Derya",
    "Sinem",
    "Selin",
    "Tuğba",
    "Sibel",
    "Gülşah",
    "Melis",
    "Elif Nur",
    "Ebru",
    "Aylin",
    "Rabia",
    "Şeyma",
    "Cansu",
    "Kübra",
    "Özge",
    "Selma",
    "Beyza",
    "Sema",
    "Seda",
    "Damla",
    "Aslı",
    "Hande",
    "Zehra",
    "Büşra Nur",
    "Yağmur",
    "Ece",
    "Zara",
    "Gözde",
    "Betül",
    "İlayda",
    "Nil",
    "Serap",
    "Zehra",
    "Tuğçe",
    "Pelin",
    "Burcu",
    "Melisa",
    "Buse",
    "Sena",
    "Rüya",
    "Gül",
    "Elif Betül",
    "Şebnem",
    "Hazal",
    "Gizem",
    "Nisa",
    "Sude",
    "Deniz",
    "İlayda",
    "İclal",
    "Bengü",
    "Elif Su",
    "Ecem",
    "Esin",
    "Sare",
    "Begüm",
    "Züleyha",
    "Çiğdem",
    "Aslıhan",
    "Alara",
    "Eylül",
    "Ceyda",
    "Aysun",
    "Göknur",
    "Mehtap",
    "Gülçin",
    "Nehir",
    "Yağmur",
    "Derin",
    "Yağış",
    "Cemre",
    "Elifnaz",
    "Ezgi",
    "Cemile",
    "Zümra",
    "Melike",
    "Aybüke",
    "Gülizar",
    "Aysima",
    "Nur",
    "Beste",
    "Ayça",
    "Elifnaz",
    "Ebrar",
    "Sibel",
    "Zeynep",
    "Gülsüm",
    "Defne",
    "Berra",
    "Nisan",
    "Duru",
    "Gülben",
    "Rana",
    "Yaren",
    "Nehir",
    "Lara",
    "Sare",
    "Melis",
    "Elif",
    "Zara",
    "Asena",
    "Beyza",
    "Simge",
    "Ecem",
    "Begüm",
    "Melodi",
    "Aleyna",
    "İlkay",
    "Lara",
    "Eda",
    "İdil",
    "Duygu",
    "Dilara",
    "Aslı",
    "Mina",
    "Sevda",
    "Nisa",
    "Aylin",
    "Nehir",
    "İrem",
    "Irmak",
    "Cansu",
    "İclal",
    "Gülben",
    "Gamze",
    "Gülnur",
    "Yağmur",
    "Özlem",
    "Zara",
    "Gülben",
    "Simay",
    "Rüya",
    "Dilara",
    "Elif"
];
string[] surname =
[
    "Yılmaz",
    "Kaya",
    "Demir",
    "Şahin",
    "Yıldırım",
    "Çelik",
    "Aydın",
    "Arslan",
    "Yalçın",
    "Aksoy",
    "Erdoğan",
    "Gürbüz",
    "Öztürk",
    "Kara",
    "Aslan",
    "Yüksel",
    "Doğan",
    "Demirci",
    "Akın",
    "Kılıç",
    "Özdemir",
    "Taş",
    "Kocaman",
    "Ateş",
    "Yılmazer",
    "Karadağ",
    "Öztürk",
    "Tekin",
    "Yaman",
    "Atalay",
    "Gündüz",
    "Koç",
    "Yavuz",
    "Güler",
    "Şen",
    "Ay",
    "Çetin",
    "Korkmaz",
    "Genç",
    "Özkan",
    "Akbaş",
    "Güneş",
    "Aktaş",
    "Çakır",
    "Güven",
    "Koçak",
    "Karagöz",
    "Korkut",
    "Erçetin",
    "Şahin",
    "Altın",
    "Yıldız",
    "Akkuş",
    "Serin",
    "Duru",
    "Yalın",
    "Saygın",
    "Türk",
    "Cebeci",
    "Dursun",
    "Kavak",
    "Bakır",
    "Çetinkaya",
    "Aygün",
    "Özgür",
    "Gündoğdu",
    "Taştan",
    "Saraçoğlu",
    "Esen",
    "Uçar",
    "Civelek",
    "Alkan",
    "Tanrıkulu",
    "Şimşek",
    "Yavuz",
    "Karakaş",
    "Şensoy",
    "Gümüş",
    "Çağlar",
    "Korkmaz",
    "Avcı",
    "Özen",
    "Işık",
    "Kuzu",
    "Gültekin",
    "Güzel",
    "Kavas",
    "Duman",
    "Akça",
    "Karaca",
    "Arı",
    "Akyıldız",
    "Karaaslan",
    "Temel",
    "Yavuz",
    "Gök",
    "Şirin",
    "Alp",
    "Yılmaz",
    "Akar",
    "Demirel",
    "Alıcı",
    "Akçay",
    "Bozkurt",
    "Kılıç",
    "Gençer",
    "Dağlı",
    "Er",
    "Tanrıverdi",
    "Göktürk",
    "Tümer",
    "Erkan",
    "Çakır",
    "Karahan",
    "Yalın",
    "Sarıkaya",
    "Savaş",
    "Demiray",
    "Akarçay",
    "Mutlu",
    "Tezel",
    "Alıcı",
    "Akbulut",
    "Tuncer",
    "Saka",
    "Güleç",
    "Özkan",
    "Karakaş",
    "Alpay",
    "Kılıç",
    "Uysal",
    "Sezer",
    "Gürel",
    "Kurt",
    "Kaya",
    "Güler",
    "Sivri",
    "Yavuz",
    "Bulut",
    "Yalın",
    "Ulu",
    "Elibol",
    "Arslanoğlu",
    "Çelik",
    "Tanrıverdi",
    "Aksoy",
    "Tezcan",
    "Korkmaz",
    "Avcı",
    "Özen",
    "Işık",
    "Kuzu",
    "Gültekin",
    "Akdağ",
    "Kırcı",
    "Arslan",
    "Göktürk",
    "Aydın",
    "Irmak",
    "Gürbüz",
    "Doğan",
    "Demir",
    "Alptekin",
    "Şimşek",
    "Gürkan",
    "Bilge",
    "Kuzu",
    "Karabulut",
    "Yılmaz",
    "Soylu",
    "Özer",
    "Akyüz",
    "Orhan",
    "Aydoğan",
    "Akdeniz",
    "Ergün",
    "Topaloğlu",
    "İnce",
    "Kırımlı",
    "Yıldız",
    "Ekmekçioğlu",
    "Ertürk",
    "Akbulut",
    "Boz",
    "Alp",
    "Karahan",
    "Akıncı",
    "Taş",
    "Saraçoğlu",
    "Ekmekçioğlu",
    "Demirel",
    "Kaya",
    "Özbek",
    "Saraç",
    "Tan",
    "Sert",
    "Yücel",
    "Sağlam",
    "Karakaş",
    "Güven",
    "Erkan",
    "Üstün",
    "Özkan",
    "Gürbüz",
    "Sert",
    "Ünal",
    "Gürbüz",
    "Karaman",
    "Güler",
    "Çağlar",
    "Tezcan",
    "Güleç",
    "Bozkurt",
    "Sezen",
    "Aygün",
    "Koç",
    "Aydın",
    "Yıldız",
    "Yağcı",
    "Koç",
    "Doğan",
    "Tanrıverdi",
    "Er",
    "Kaya",
    "Yavuz",
    "Oktay",
    "Köse",
    "Bozkurt",
    "Karagöz",
    "Alkan",
    "Yıldırım",
    "Soylu",
    "Kara",
    "Yalın",
    "Duran",
    "Gürsoy",
    "Kılıç",
    "Ünlü",
    "Yıldırım",
    "Güngör",
    "Yüksel",
    "Özen",
    "Tandoğan",
    "Güneş",
    "Özgür",
    "Eren",
    "Güzel",
    "Dikmen",
    "Yılmaz",
    "Er",
    "Turhan",
    "Gürsoy",
    "Güneş",
    "Kızıl",
    "Kılınç",
    "Ateş",
    "Kılıç",
    "Şahin",
    "Ak",
    "Gökçe",
    "Karahan",
    "Arıkan",
    "Aksoy",
    "Er",
    "Kurt",
    "Günay",
    "Zorlu"
];
string[] city = new string[]
{
    "İstanbul", "Ankara", "İzmir", "Bursa", "Adana", "Gaziantep", "Konya", "Antalya", "Diyarbakır", "Mersin"
};
Random random = new();
AppDbContext dbContext = new();
for (int i = 125; i < 250; i++)
{

    List<int> testIds = new();
    TestCategorys testCt = (TestCategorys)random.Next(0, 19);
    Occupation occ = (Occupation)random.Next(0, 42);
    EducationLevel edd = (EducationLevel)random.Next(0, 5);
    if (occ == Occupation.Muhendis || occ == Occupation.Eczaci || occ == Occupation.DisHekimi || occ == Occupation.Fizyoterapist || occ == Occupation.Jeolog || occ == Occupation.Mimar || occ == Occupation.Pilot || occ == Occupation.Psikolog)
        edd = (EducationLevel)random.Next(2, 5);
    int year = random.Next(1950, 2005);
    int month = random.Next(1, 12);
    int maxDay = DateTime.DaysInMonth(year, month);
    int day = random.Next(1, maxDay + 1);
    DateTime randomDate = new(year, month, day);
    AppUser appUser;
    if (i < 125)
    {
        appUser = new()
        {
            UserName = (boysName[i] + "." + surname[i]).ToLower().Replace('ı', 'i').Replace('ü', 'u').Replace('ö', 'o').Replace('ş', 's').Replace('ğ', 'g').Replace('ç', 'c'),
            EmailConfirmed = true,
            Email = (boysName[i] + "." + surname[i]).ToLower().Replace('ı', 'i').Replace('ü', 'u').Replace('ö', 'o').Replace('ş', 's').Replace('ğ', 'g').Replace('ç', 'c') + "@gmail.com",
            BirthDate = DateTime.SpecifyKind(randomDate, DateTimeKind.Utc),
            City = city[random.Next(0, 10)],
            Gender = Gender.Erkek,
            Occupation = occ,
            EducationLevel = edd
        };
    }
    else
    {
        appUser = new()
        {
            UserName = (girlsName[i - 125] + "." + surname[i - 125]).ToLower().Replace('ı', 'i').Replace('ü', 'u').Replace('ö', 'o').Replace('ş', 's').Replace('ğ', 'g').Replace('ç', 'c'),
            EmailConfirmed = true,
            Email = (girlsName[i - 125] + "." + surname[i - 125]).ToLower().Replace('ı', 'i').Replace('ü', 'u').Replace('ö', 'o').Replace('ş', 's').Replace('ğ', 'g').Replace('ç', 'c') + "@gmail.com",
            BirthDate = DateTime.SpecifyKind(randomDate, DateTimeKind.Utc),
            City = city[random.Next(0, 10)],
            Gender = Gender.Kadın,
            Occupation = occ,
            EducationLevel = edd
        };
    }
    if (appUser.Gender == Gender.Erkek || appUser.Occupation == Occupation.Antrenor || appUser.EducationLevel == EducationLevel.HighSchool || appUser.EducationLevel == EducationLevel.AssociatesDegree)
    {
        List<Test> test = [.. dbContext.Tests.Where(x => x.TestCategorys == TestCategorys.Spor).OrderBy(x => EF.Functions.Random()).Take(5)];
        foreach (var item in test)
        {
            testIds.Add(item.Id);
            dbContext.ExamResults.Add(new()
            {
                Exam = item,
                Student = appUser,
                Result = GetRandomPoint()
            });
        }
        //SPORT TESTİ ÇÖZECEK 5 TANE
    }
    if (appUser.Occupation == Occupation.Biyolog || appUser.Occupation == Occupation.BilgisayarSistemAnalisti || appUser.Occupation == Occupation.Biyoistatistikci || appUser.Occupation == Occupation.DisHekimi || appUser.Occupation == Occupation.DoktorHemsire || appUser.Occupation == Occupation.Jeolog || appUser.Occupation == Occupation.Muhendis || appUser.Occupation == Occupation.Ogretmen || appUser.Occupation == Occupation.YazilimGelistirici || appUser.Occupation == Occupation.Eczaci || appUser.EducationLevel == EducationLevel.BachelorsDegree)
    {
        List<Test> test = [.. dbContext.Tests.Where(x => x.TestCategorys == TestCategorys.Bilim_ve_Teknoloji).OrderBy(x => EF.Functions.Random()).Take(6)];
        foreach (var item in test)
        {

            testIds.Add(item.Id);
            dbContext.ExamResults.Add(new()
            {
                Exam = item,
                Student = appUser,
                Result = GetRandomPoint()
            });
        }
        //Bilim alanında 6 test çözsün
    }
    if (appUser.Occupation == Occupation.Ogretmen || appUser.Occupation == Occupation.KamuGorevlisi || appUser.EducationLevel == EducationLevel.MastersDegree || appUser.Gender == Gender.Kadın)
    {
        List<Test> test = [.. dbContext.Tests.Where(x => x.TestCategorys == TestCategorys.Din_ve_Mitoloji).OrderBy(x => EF.Functions.Random()).Take(6)];
        foreach (var item in test)
        {
            testIds.Add(item.Id);
            dbContext.ExamResults.Add(new()
            {
                Exam = item,
                Student = appUser,
                Result = GetRandomPoint()
            });
        }
        //Din ve mitoloji alanında 6 test çözsün
    }
    if (appUser.Occupation == Occupation.Ogretmen || appUser.Occupation == Occupation.Jeolog || appUser.EducationLevel == EducationLevel.Doctorate)
    {
        List<Test> test = [.. dbContext.Tests.Where(x => x.TestCategorys == TestCategorys.Coğrafya_ve_Ülkeler).OrderBy(x => EF.Functions.Random()).Take(5)];
        foreach (var item in test)
        {
            testIds.Add(item.Id);
            dbContext.ExamResults.Add(new()
            {
                Exam = item,
                Student = appUser,
                Result = GetRandomPoint()
            });
        }
        //Coğrafyadan 5 test
    }
    if (appUser.Occupation == Occupation.Ogretmen || appUser.EducationLevel == EducationLevel.Doctorate || appUser.EducationLevel == EducationLevel.MastersDegree)
    {
        List<Test> test = [.. dbContext.Tests.Where(x => x.TestCategorys == TestCategorys.Tarih_ve_Tarihçe).OrderBy(x => EF.Functions.Random()).Take(5)];
        foreach (var item in test)
        {
            testIds.Add(item.Id);
            dbContext.ExamResults.Add(new()
            {
                Exam = item,
                Student = appUser,
                Result = GetRandomPoint()
            });
        }
        //Tarih 5 test
    }
    List<Test> randomTest = [.. dbContext.Tests.Where(x => !testIds.Contains(x.Id)).OrderBy(x => EF.Functions.Random()).Take(7)];
    foreach (var item in randomTest)
    {
        dbContext.ExamResults.Add(new()
        {
            Exam = item,
            Student = appUser,
            Result = GetRandomPoint()
        });
    }
    //Random 4 test

    dbContext.Users.Add(appUser);
    dbContext.SaveChanges();
}
int GetRandomPoint()
{
    return random.Next(4, 11) * 10;
}